<?php

/**
 * @file
 * A custom module for Drupal 7, named 'easyddb_ee_pdf'.
 */

/**
 * Implements hook_help().
 */
function easyddb_ee_pdf_help($path, $arg) {
  if ($path == 'admin/help#easyddb_ee_pdf') {
    return t('Module for generating events list as PDF file.');
  }
}

/**
 * Implements hook_menu().
 */
function easyddb_ee_pdf_menu(): array {
  $items = [];

  $items['admin/content/pdf'] = [
    'title' => 'Events PDF',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['easyddb_ee_pdf_generate_pdf_form'],
    'access arguments' => array('generate events pdf'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'easyddb_ee_pdf.pdf.inc',
  ];

  return $items;
}

/**
 * Implements hook_permission().
 */
function easyddb_ee_pdf_permission(): array {
  return [
    'generate events pdf' => [
      'title' => t('Generate events list as PDF'),
      'description' => t('Check this to allow access to the page to generate events list as a PDF file.'),
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function easyddb_ee_pdf_theme(): array {
  return array(
    'ee_pdf_intro' => array(
      'variables' => array(
        'title' => NULL,
        'intro' => NULL,
      ),
      'template' => 'templates/ee_pdf_intro',
    ),
    'ee_pdf_library_events' => array(
      'variables' => array(
        'library' => NULL,
        'events' => NULL,
      ),
      'template' => 'templates/ee_pdf_library_events',
    ),
    'ee_pdf_event' => array(
      'variables' => array(
        'event' => NULL,
      ),
      'template' => 'templates/ee_pdf_event',
    ),
    'ee_pdf_header' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/ee_pdf_header',
    ),
    'ee_pdf_footer' => array(
      'variables' => array(
        'title' => NULL,
      ),
      'template' => 'templates/ee_pdf_footer',
    ),
  );
}

/**
 * Process the events list into a markup before it gets to the template.
 */
function template_preprocess_ee_pdf_library_events(array &$variables) {
  $events = $variables['events'];

  $events_list = [];
  foreach ($events as $event) {
    $events_list[] = theme('ee_pdf_event', ['event' => $event]);
  }

  $variables['events_list'] = implode('', $events_list);
}

/**
 * Implements template_preprocess_HOOK().
 */
function template_preprocess_ee_pdf_event(array &$variables) {
  $event = $variables['event'];

  $event_date = field_get_items('node', $event, 'field_ding_event_date');
  $event_date = $event_date[0] ?? '';
  if ($event_date['value']) {
    $event_date_obj = (DateTime::createFromFormat(
      'Y-m-d H:i:s',
      $event_date['value'],
      (new DateTimeZone($event_date['timezone_db']))
    ));
    $event_date = $event_date_obj
      ->setTimezone((new DateTimeZone($event_date['timezone'])))
      ->format('Y-m-d H:i:s');
  }
  $variables['event_date'] = $event_date;

  $event_location = field_get_items('node', $event, 'field_ding_event_location');
  $variables['event_location'] = implode(', ',
    array_filter([
      $event_location[0]['thoroughfare'] ?? '',
      $event_location[0]['locality'] ?? '',
    ])
  );

  $event_description = field_get_items('node', $event, 'field_ding_event_body');
  $variables['event_description'] = $event_description[0]['safe_value'] ?? '';
}
